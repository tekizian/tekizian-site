{"version":3,"sources":["Components/NavBar/NavBar.js","Pages/Home.js","Pages/Link1.js","Pages/404.js","Components/Main/Main.js","Components/Carousel/Carousel.js","App.js","serviceWorker.js","index.js","Images/TE_logo-no-bg-sm.png"],"names":["NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","Navbar","Header","Brand","Link","to","Nav","NavItem","componentClass","eventKey","href","Component","Home","className","process","src","logo","alt","Link1","Carousel_Carousel","left","img","title","text","main","right","NotFound","Main","Switch","Route","exact","path","component","Carousel","animate","console","log","cardAnimations","render","renderCard","contentObj","onClick","App","NavBar_NavBar","Main_Main","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.34ea4cab.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar, Nav, NavItem} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Navbar>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Navbar.Brand>\r\n                </Navbar.Header>\r\n                <Nav>\r\n                    <NavItem componentClass={Link} eventKey={1} href='/Link1' to='/Link1'>\r\n                        Link1\r\n                    </NavItem>\r\n                    <NavItem componentClass={Link} eventKey={2} href=\"/404\" to=\"/404\">\r\n                        404\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from '../Images/TE_logo-no-bg-sm.png';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n                <h1 className=\"font-bold\">Home: {process.env.PUBLIC_URL}</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <br/>\r\n                <p>\r\n                Currently <code>under construction</code>.\r\n                </p>\r\n            </header>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Carousel } from '../Components';\r\nimport logo from '../Images/TE_logo-no-bg-sm.png';\r\n\r\nexport class Link1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <Carousel\r\n                    left={{\r\n                        img: logo,\r\n                        alt: 'Image',\r\n                        title: 'Left',\r\n                        text: 'This is the caption'\r\n                    }}\r\n                    main={{\r\n                        img: logo,\r\n                        alt: 'Image',\r\n                        title: 'main',\r\n                        text: 'This is the caption'\r\n                    }}\r\n                    right={{\r\n                        img: logo,\r\n                        alt: 'Image',\r\n                        title: 'Right',\r\n                        text: 'This is the caption'\r\n                    }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from '../Images/TE_logo-no-bg-sm.png';\r\n\r\nexport class NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n                <h1>404: {process.env.PUBLIC_URL}</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <br/>\r\n                <p>\r\n                Currently <code>under construction</code>.\r\n                </p>\r\n                <p>\r\n                Maybe this path will be available later.\r\n                </p>\r\n                <p>\r\n                    Until then, please stop poking around.\r\n                </p>\r\n            </header>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Home} from '../../Pages/Home';\r\nimport {Link1} from '../../Pages/Link1';\r\nimport {NotFound} from '../../Pages/404';\r\n\r\nexport class Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <main>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route path='/Link1' component={Link1}/>\r\n                        <Route component={NotFound}/>\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class Carousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            left: props.left,\r\n            main: props.main,\r\n            right: props.right,\r\n        };\r\n        this.cardAnimations = {\r\n            main: ''\r\n        }\r\n    }\r\n\r\n    animate = () =>{\r\n        console.log(\"ANIMATE clicked\");\r\n        this.cardAnimations.main=\"animate\";\r\n        this.render();\r\n    }\r\n\r\n    renderCard = (contentObj) => {\r\n        return (\r\n            <div className=\"Box--sm\">\r\n                <div className=\"Card\">\r\n                    <div className={this.cardAnimations.main}>\r\n                        <div className=\"image\">\r\n                            <img src={contentObj.img} alt={contentObj.alt} />\r\n                        </div>\r\n                        <div className=\"Box--xs\">\r\n                            <h4>{contentObj.title}</h4>\r\n                            <p>{contentObj.text}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Carousel\">\r\n                <div className=\"arrow\" onClick={this.animate}>\r\n                    <button className=\"left\">&#8678;</button>\r\n                </div>\r\n                <div className=\"view-window\">\r\n                    {this.renderCard(this.state.main)}\r\n                </div>\r\n                <div className=\"arrow\">\r\n                    <button className=\"right\">&#8680;</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Main, NavBar } from './Components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar/>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/TE_logo-no-bg-sm.d76c099a.png\";"],"sourceRoot":""}